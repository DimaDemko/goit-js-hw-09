{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEyDC,EAAA,CACvDC,WAAYC,SAASC,cAAc,kBACnCC,UAAWF,SAASC,cAAc,iBAClCE,YAAaH,SAASC,cAAc,mBACpCG,SAAUJ,SAASC,cAAc,UAJ3BI,EAAiDP,EAAjDC,WAAYO,EAAqCR,EAArCI,UAAWK,EAA0BT,EAA1BK,YAAaK,EAAaV,EAAbM,SA4B5C,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFI,EAAQ,CAAEN,WAAUC,UAGtBM,EAAO,CAAEP,WAAUC,YAClBA,MA/BPH,EAASW,iBAAiB,UAAU,SAAAC,GAClCA,EAAMC,iBAKN,IAHA,IAAIC,EAAaC,OAAOlB,EAAWmB,OAC7BC,EAAYF,OAAOjB,EAAUkB,OAE1BE,EAAQ,EAAGA,GAASnB,EAAYiB,MAAOE,IAC9CjB,EAAciB,EAAOJ,GAClBK,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBf,EAAAiC,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,UAE9DqB,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBf,EAAAiC,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,UAG9DW,GAAcG,EAGhBjB,EAAS0B,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst { delayValue, stepValue, amountValue, formItem } = {\n  delayValue: document.querySelector(\"[name='delay']\"),\n  stepValue: document.querySelector(\"[name='step']\"),\n  amountValue: document.querySelector(\"[name='amount']\"),\n  formItem: document.querySelector('.form'),\n};\n\nformItem.addEventListener('submit', event => {\n  event.preventDefault();\n\n  let firstDelay = Number(delayValue.value);\n  const delayTime = Number(stepValue.value);\n\n  for (let index = 1; index <= amountValue.value; index++) {\n    createPromise(index, firstDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    firstDelay += delayTime;\n  }\n\n  formItem.reset();\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$ref","delayValue","document","querySelector","stepValue","amountValue","formItem","$ce04d3a99e08e73b$var$delayValue","$ce04d3a99e08e73b$var$stepValue","$ce04d3a99e08e73b$var$amountValue","$ce04d3a99e08e73b$var$formItem","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","firstDelay","Number","value","delayTime","index","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.bbac9533.js.map"}